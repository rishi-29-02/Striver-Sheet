// Set Matrix Zeros


// Time O(m x n)
// Space O(1)

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
        int col0 = false;
        
        for(int i=0;i<n;i++){
            if(matrix[i][0]==0) col0 = true;
            for(int j=1;j<m;j++){
                if(matrix[i][j]==0){
                    matrix[0][j] = 0;
                    matrix[i][0] = 0;
                }
            }
        }
        
        for(int i=n-1;i>=0;i--){
            for(int j=m-1;j>=1;j--){
                if(matrix[i][0]==0 || matrix[0][j]==0){
                    matrix[i][j] = 0;
                }
            }
            if(col0==true){
                matrix[i][0] = 0;
            }
        }
    }
};

// Time O(m x n)
// Space O(m+n)

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
        unordered_set<int> row_pos, col_pos;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j]==0){
                    row_pos.insert(i);
                    col_pos.insert(j);
                }
            }
        }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(row_pos.find(i)!=row_pos.end() || col_pos.find(j)!=col_pos.end()){
                    matrix[i][j] = 0;
                }
            }
        }
    }
};